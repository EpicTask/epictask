swagger: '2.0'
info:
  title: User Management Service
  description: API documentation for the User Management Service
  version: 1.0.0
host: api-gateway-v1-3vfu5pwe8eq6a.apigateway.task-coin-384722.cloud.goog
schemes:
  - https
produces:
  - application/json
security:
  - api_key: []
x-google-backend:
  address: >-
    https://user-management-5wpxgn35iq-uc.a.run.app
paths:
  /users/me:
    get:
      operationId: getCurrentUserProfile
      summary: Get current user's profile
      description: Retrieves the profile of the currently authenticated user.
      produces:
        - application/json
      security:
        - firebase: []
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/UserProfile'
        '401':
          description: Unauthorized
        '404':
          description: User profile not found
  /users/me/children:
    get:
      operationId: getLinkedChildren
      summary: Get linked children
      description: Retrieves a list of children linked to the parent's account.
      produces:
        - application/json
      security:
        - firebase: []
      responses:
        '200':
          description: A list of linked children
          schema:
            type: array
            items:
              $ref: '#/definitions/UserProfile'
        '401':
          description: Unauthorized
  /users/link-child:
    post:
      operationId: linkChildAccount
      summary: Link a child account
      description: Links a child's account to a parent's account using an invite code.
      consumes:
        - application/json
      produces:
        - application/json
      security:
        - firebase: []
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
            required:
              - inviteCode
            properties:
              inviteCode:
                type: string
                description: The invite code generated by the child.
      responses:
        '200':
          description: Child account linked successfully
        '400':
          description: Invalid invite code
        '401':
          description: Unauthorized
  /users/generate-invite-code:
    post:
      operationId: generateInviteCode
      summary: Generate invite code
      description: Generates a short-lived invite code for a child to share with a parent.
      produces:
        - application/json
      security:
        - firebase: []
      responses:
        '200':
          description: Invite code generated successfully
          schema:
            type: object
            properties:
              inviteCode:
                type: string
              expiresAt:
                type: string
                format: date-time
        '401':
          description: Unauthorized
  /profileUpdate:
    post:
      operationId: profileUpdate
      description: User updated profile
      consumes:
        - application/json
      produces:
        - application/json
      security: []
      parameters:
        - in: body
          name: profileUpdate
          description: The profile update object
          required: true
          schema:
            $ref: '#/definitions/ProfileUpdate'
      responses:
        '201':
          description: User profile updated successfully
        '400':
          description: Invalid request.
        '500':
          description: Internal server error.
  /registerWithPassword:
    post:
      operationId: registerWithPassword
      description: Register a new user with email and password.
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UserRegistration'
      responses:
        '201':
          description: User created successfully
          schema:
            $ref: '#/definitions/UserSignInResponse'
        '400':
          description: Invalid request.
  /loginWithPassword:
    post:
      operationId: loginWithPassword
      description: Login with email and password.
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: loginWithPassword
          description: The user sign in object
          required: true
          schema:
            $ref: '#/definitions/UserSignIn'
      responses:
        '200':
          description: User logged in successfully
          schema:
            $ref: '#/definitions/UserSignInResponse'
        '401':
          description: Invalid credentials.
  /:
    get:
      operationId: rootPage
      description: Default route
      consumes:
        - application/json
      produces:
        - application/json
      security: []
      responses:
        '200':
          description: Welcome message
          schema:
            type: string
        '400':
          description: Invalid request.
        '500':
          description: Internal server error.
securityDefinitions:
  firebase:
    authorizationUrl: ""
    flow: "implicit"
    type: "oauth2"
    x-google-issuer: "https://securetoken.google.com/task-coin-384722"
    x-google-jwks_uri: "https://www.googleapis.com/service_accounts/v1/metadata/x509/securetoken@system.gserviceaccount.com"
    x-google-audiences: "task-coin-384722"
definitions:
  UserProfile:
    type: object
    properties:
      uid:
        type: string
      email:
        type: string
      displayName:
        type: string
      photoURL:
        type: string
      role:
        type: string
        enum: ["parent", "kid"]
  UserRegistration:
    type: object
    required:
      - email
      - password
      - displayName
      - role
    properties:
      email:
        type: string
      password:
        type: string
        format: password
      displayName:
        type: string
      role:
        type: string
        enum: ["parent", "kid"]
  UserSignIn:
    type: object
    required:
      - email
      - password
    properties:
      email:
        type: string
      password:
        type: string
        format: password
  UserSignInResponse:
    type: object
    properties:
      token:
        type: string
      user:
        $ref: '#/definitions/UserProfile'
  ProfileUpdate:
    type: object
    properties:
      displayName:
        type: string
      photoURL:
        type: string
