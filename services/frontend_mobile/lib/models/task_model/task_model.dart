import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:freezed_annotation/freezed_annotation.dart';

// required: associates our `user_model.dart` with the code generated by Freezed
part 'task_model.freezed.dart';
// optional: Since our UserModel class is serializable, we must add this line.
// But if UserModel was not serializable, we could skip it.
part 'task_model.g.dart';

///Model for cloud data
class TimestampConverter implements JsonConverter<DateTime, Timestamp> {
  const TimestampConverter();

  @override
  DateTime fromJson(Timestamp json) => json.toDate();

  @override
  Timestamp toJson(DateTime object) => Timestamp.fromDate(object);
}

class TimestampNullableConverter
    implements JsonConverter<DateTime?, Timestamp?> {
  const TimestampNullableConverter();

  @override
  DateTime? fromJson(Timestamp? json) => json?.toDate();

  @override
  Timestamp? toJson(DateTime? object) =>
      object == null ? null : Timestamp.fromDate(object);
}

@freezed
class TaskModel with _$TaskModel {
  const factory TaskModel({
    required String taskDescription,
    required double rewardAmount,
    required String rewardCurrency,
    String? assignedUser,
    bool? markedCompleted,
    required String userId,
    required String taskId,
    @TimestampConverter()  DateTime? expirationDate,
  }) = _TaskModel;

  factory TaskModel.fromJson(Map<String, Object?> json) =>
      _$TaskModelFromJson(json);

  factory TaskModel.defaultTask() {
    return TaskModel(
      taskDescription: 'Default Task',
      rewardAmount: 100.0,
      rewardCurrency: 'XRP',
      expirationDate: DateTime.now(),
      assignedUser: 'James',
      markedCompleted: false,
      userId: '123456789',
      taskId: '12345',
    );
  }
}

// dart run build_runner build --delete-conflicting-outputs