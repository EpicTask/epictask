// ignore_for_file: non_constant_identifier_names

import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:freezed_annotation/freezed_annotation.dart';

// required: associates our `user_model.dart` with the code generated by Freezed
part 'task_model.freezed.dart';
// optional: Since our UserModel class is serializable, we must add this line.
// But if UserModel was not serializable, we could skip it.
part 'task_model.g.dart';

///Model for cloud data
class TimestampConverter implements JsonConverter<DateTime, Timestamp> {
  const TimestampConverter();

  @override
  DateTime fromJson(Timestamp json) => json.toDate();

  @override
  Timestamp toJson(DateTime object) => Timestamp.fromDate(object);
}

class TimestampNullableConverter
    implements JsonConverter<DateTime?, Timestamp?> {
  const TimestampNullableConverter();

  @override
  DateTime? fromJson(Timestamp? json) => json?.toDate();

  @override
  Timestamp? toJson(DateTime? object) =>
      object == null ? null : Timestamp.fromDate(object);
}

@freezed
class TaskModel with _$TaskModel {
  const factory TaskModel({
    List<String?>? assigned_to_ids,
    required int expiration_date,
    bool? marked_completed,
    required String payment_method,
    String? project_id,
    String? project_name,
    int? rating,
    bool? requires_attachments,
    required double reward_amount,
    required String reward_currency,
    required bool rewarded,
    required String task_description,
    required String task_id,
    String? task_title,
    String? terms_blob,
    String? terms_id,
    required String user_id,
    @TimestampConverter() DateTime? timestamp,
  }) = _TaskModel;

  factory TaskModel.fromJson(Map<String, Object?> json) =>
      _$TaskModelFromJson(json);

  factory TaskModel.defaultTask() {
    return TaskModel(
      assigned_to_ids: [],
      expiration_date: Timestamp.now().seconds,
      marked_completed: false,
      payment_method: 'Pay Directly',
      project_id: '',
      project_name: '',
      rating: 0,
      requires_attachments: false,
      reward_amount: 100.0,
      reward_currency: 'XRP',
      rewarded: false,
      task_description: 'Default Task',
      task_id: '12345',
      task_title: '',
      terms_blob: '',
      terms_id: '',
      user_id: '',
      timestamp: DateTime.now(),
    );
  }
}

// dart run build_runner build --delete-conflicting-outputs