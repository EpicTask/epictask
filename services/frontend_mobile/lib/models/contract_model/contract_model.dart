import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:freezed_annotation/freezed_annotation.dart';

// required: associates our `user_model.dart` with the code generated by Freezed
part 'contract_model.freezed.dart';
// optional: Since our UserModel class is serializable, we must add this line.
// But if UserModel was not serializable, we could skip it.
part 'contract_model.g.dart';

class TimestampConverter implements JsonConverter<DateTime, Timestamp> {
  const TimestampConverter();

  @override
  DateTime fromJson(Timestamp json) => json.toDate();

  @override
  Timestamp toJson(DateTime object) => Timestamp.fromDate(object);
}

class TimestampNullableConverter
    implements JsonConverter<DateTime?, Timestamp?> {
  const TimestampNullableConverter();

  @override
  DateTime? fromJson(Timestamp? json) => json?.toDate();

  @override
  Timestamp? toJson(DateTime? object) =>
      object == null ? null : Timestamp.fromDate(object);
}

@freezed
class ContractModel with _$ContractModel {
  const factory ContractModel({
    String? contract,
    @TimestampConverter() DateTime? timestamp,
  }) = _ContractModel;

  factory ContractModel.fromJson(Map<String, Object?> json) =>
      _$ContractModelFromJson(json);

  factory ContractModel.defaultEvent() {
    return const ContractModel(
        contract: 'defaultEvent',);
  }
}